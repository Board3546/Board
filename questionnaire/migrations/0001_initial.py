# Generated by Django 4.1.7 on 2023-03-22 09:22

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Addition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=60, verbose_name="Название услуги"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=60, verbose_name="Название категории"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MultipleImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to="photos/%Y/%m/%d", verbose_name="Фото"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=128, verbose_name="Рецензент")),
                (
                    "date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата публикации"
                    ),
                ),
                ("stars", models.SmallIntegerField(verbose_name="Оценка")),
                ("message", models.TextField(verbose_name="Описание")),
                (
                    "moderated",
                    models.BooleanField(default=False, verbose_name="Проверено"),
                ),
                (
                    "original_photo",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="Фото соответствует"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=128, verbose_name="Название")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                ("age", models.SmallIntegerField(verbose_name="Возраст")),
                ("weight", models.SmallIntegerField(verbose_name="Вес")),
                ("height", models.SmallIntegerField(verbose_name="Рост")),
                ("size", models.SmallIntegerField()),
                ("hair", models.CharField(max_length=50)),
                ("appearance", models.CharField(max_length=60)),
                ("gender", models.CharField(max_length=60)),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="Опубликовано"),
                ),
                (
                    "waiting_call",
                    models.BooleanField(default=False, verbose_name="Жду звонка"),
                ),
                (
                    "subscription",
                    models.IntegerField(
                        choices=[
                            (30, "TOP тариф"),
                            (20, "VIP тариф"),
                            (10, "Базовый тариф"),
                        ]
                    ),
                ),
                (
                    "confirmed",
                    models.BooleanField(default=False, verbose_name="Подтвержден"),
                ),
                ("views", models.IntegerField(default=0, verbose_name="Просмотры")),
                ("location", models.CharField(max_length=50, verbose_name="Локация")),
                (
                    "price_one_hour",
                    models.IntegerField(blank=True, null=True, verbose_name="Цена час"),
                ),
                (
                    "price_two_hours",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Цена два часа"
                    ),
                ),
                (
                    "price_full",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Цена за ночь"
                    ),
                ),
                (
                    "price_one_hour_outdoors",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Цена час на выезд"
                    ),
                ),
                (
                    "price_two_hours_outdoors",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Цена два часа на выезд"
                    ),
                ),
                (
                    "price_full_outdoors",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Цена за ночь на выезд"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (1, "Девушка"),
                            (2, "Массажистки"),
                            (3, "Парни"),
                            (4, "Фирма досуга"),
                        ],
                        max_length=10,
                    ),
                ),
                ("subscription_active", models.BooleanField(default=False)),
                (
                    "subscription_expire",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата окончания подписки"
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="videos/%Y/%m/%d",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["MOV", "avi", "mp4", "webm", "mkv"]
                            )
                        ],
                    ),
                ),
                ("additions", models.ManyToManyField(to="questionnaire.addition")),
            ],
            options={
                "verbose_name": "Анкета",
                "verbose_name_plural": "Анкеты",
                "ordering": ["-subscription"],
            },
        ),
    ]
